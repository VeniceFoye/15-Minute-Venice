name: tests

on: [push, fork]

permissions:
  contents: read

jobs:
  pytest:
    name: py${{ matrix.python-version }} â€¢ ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install cmake ninja

      # If rasterio/scipy aren't in your pyproject deps yet, either add them there
      # or keep this explicit install to ensure tests have what they need.
      - name: Install package and test deps (build C++ extension)
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: "2"
          SKBUILD_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release"
        run: |
          # Installs your package in editable mode and dev deps from pyproject
          pip install -e .[dev]
          # If NOT already declared in [project].dependencies, uncomment:
          # pip install rasterio scipy

      - name: Verify C++ extension import
        run: |
          python - <<'PY'
          try:
              import urbanflow.cpp.path_planner as m
              print("path_planner OK:", m.__file__)
          except Exception as e:
              import sys, traceback
              print("Failed to import urbanflow.cpp.path_planner:", e, file=sys.stderr)
              traceback.print_exc()
              sys.exit(1)
          PY

      - name: Run tests
        run: |
          mkdir -p reports
          pytest -q --maxfail=1 --disable-warnings \
            --junitxml=reports/junit.xml \
            --cov=urbanflow --cov-report=xml:reports/coverage.xml

      - name: Upload test reports (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-py${{ matrix.python-version }}
          path: reports/
          if-no-files-found: warn
